!function(){"use strict";angular.module("metricapp",["ngRoute","ngCookies","ngMessages","ngFlash","ngMockE2E","nvd3","angular.morris-chart","ui.ace"])}(),function(){"use strict";angular.module("metricapp").constant("MESSAGE_STATE",{READ:"READ",UNREAD:"UNREAD"})}(),function(){"use strict";angular.module("metricapp").constant("AUTH_EVENTS",{LOGIN_SUCCESS:"auth.login.success",LOGIN_FAILURE:"auth.login.failure",LOGOUT_SUCCESS:"auth.logout.success",LOGOUT_FAILURE:"auth.logout.failure",NOT_AUTHORIZED:"auth.not.authorized"})}(),function(){"use strict";angular.module("metricapp").constant("TEAM_EVENTS",{TEAM_EVENT_A:"team.event.a",TEAM_EVENT_B:"team.event.b",TEAM_EVENT_C:"team.event.c"})}(),function(){"use strict";angular.module("metricapp").constant("METRIC_EVENTS",{METRIC_EVENT_A:"metric.event.a",METRIC_EVENT_B:"metric.event.b",METRIC_EVENT_C:"metric.event.c"})}(),function(){"use strict";angular.module("metricapp").constant("QUESTION_EVENTS",{QUESTION_EVENT_A:"question.event.a",QUESTION_EVENT_B:"question.event.b",QUESTION_EVENT_C:"question.event.c"})}(),function(){"use strict";angular.module("metricapp").constant("GOAL_EVENTS",{GOAL_EVENT_A:"goal.event.a",GOAL_EVENT_B:"goal.event.b",GOAL_EVENT_C:"goal.event.c"})}(),function(){"use strict";angular.module("metricapp").constant("REST_SERVICE",{DOMAIN:"metricapp.com",PORT:8090,URL:"metricapp.com:8090"})}(),function(){"use strict";angular.module("metricapp").constant("EXPERT_ACTIONS",[{name:"Profile",href:"#/profile",icon:"user"},{name:"Grid",href:"#/grid",icon:"codepen"},{name:"Graph draft",href:"#/graph_draft",icon:"codepen"},{name:"Profile Pop-Up",href:"#/profile_pop_up",icon:"user"},{name:"Team",href:"#/team",icon:"users"},{name:"Settings",href:"#/settings",icon:"cog"}])}(),function(){"use strict";angular.module("metricapp").constant("METRICATOR_ACTIONS",[{name:"Profile",href:"#/profile"},{name:"Dashboard",href:"#/metricator"},{name:"Settings",href:"#/settings"},{name:"Search MG",href:"#/measurementgoalsearch"}])}(),function(){"use strict";angular.module("metricapp").constant("QUESTIONER_ACTIONS",[{name:"Profile",href:"/#profile"},{name:"QUESTIONER_ACTION_2",href:"#/questioner_action_2"},{name:"Settings",href:"#/settings"}])}(),function(){"use strict";angular.module("metricapp").constant("GENDERS",{MALE:"MALE",FEMALE:"FEMALE"})}(),function(){"use strict";angular.module("metricapp").constant("ROLES",{EXPERT:"EXPERT",QUESTIONER:"QUESTIONER",METRICATOR:"METRICATOR"})}(),function(){"use strict";angular.module("metricapp").constant("STATES",{CREATED:"Created",ONUPDATEWAITINGQUESTIONS:"OnUpdatedWaitingQuestions",ONUPDATEQUESTIONERENDPOINT:"OnUpdateQuestionerEndpoint",PENDING:"Pending",REJECTED:"Rejected",SUSPENDED:"Suspended",APPROVED:"Approved"})}(),function(){"use strict";angular.module("metricapp").constant("STATES_METRIC",{CREATED:"Created",ONUPDATE:"OnUpdate",PENDING:"Pending",REJECTED:"Rejected",SUSPENDED:"Suspended",APPROVED:"Approved"})}(),function(){"use strict";angular.module("metricapp").value("DB_PROFILES",[{username:"expert",firstname:"Giacomo",lastname:"Marciani",gender:"MALE",birthday:"27/06/1990",email:"giacomo.marciani@domain.com",picture:"uploads/profile-picture.png"},{username:"questioner",firstname:"Marco",lastname:"Piu",gender:"MALE",birthday:"27/06/1990",email:"marco.piu@domain.com",picture:"uploads/profile-picture.png"},{username:"metricator",firstname:"Andrea",lastname:"Gennusa",gender:"MALE",birthday:"27/06/1990",email:"andrea.gennusa@domain.com",picture:"uploads/profile-picture.png"}])}(),function(){"use strict";angular.module("metricapp").value("DB_USERS",[{username:"expert",password:"password",role:"EXPERT"},{username:"questioner",password:"password",role:"QUESTIONER"},{username:"metricator",password:"password",role:"METRICATOR"}])}(),function(){"use strict";function e(e){e.setTimeout(5e3),e.setShowClose(!0),e.setOnDismiss(function(){alert("flash message dismissed")})}angular.module("metricapp").config(e),e.$inject=["FlashProvider"]}(),function(){"use strict";function e(e){e.interceptors.push("Error401Interceptor"),e.interceptors.push("Error404Interceptor"),e.interceptors.push("Error500Interceptor")}angular.module("metricapp").config(e),e.$inject=["$httpProvider"]}(),function(){"use strict";function e(e,t){e.when("/",{redirectTo:"/home"}).when("/signup",{templateUrl:"dist/views/authentication/signup.view.html"}).when("/login",{templateUrl:"dist/views/authentication/login.view.html"}).when("/home",{templateUrl:"dist/views/home/home.view.html"}).when("/notifications",{templateUrl:"dist/views/notification/notifications.view.html"}).when("/messages",{templateUrl:"dist/views/message/messages.view.html"}).when("/profile",{templateUrl:"dist/views/people/profile.view.html"}).when("/profile_pop_up",{templateUrl:"dist/views/people/profile_pop_up.view.html"}).when("/settings",{templateUrl:"dist/views/setting/settings.view.html"}).when("/grid",{templateUrl:"dist/views/graph/grid/grid.view.html"}).when("/graph_draft",{templateUrl:"dist/views/graph/draft/draft.view.html"}).when("/team",{templateUrl:"dist/views/team/team.view.html"}).when("/401",{templateUrl:"dist/views/error/error401.view.html"}).when("/404",{templateUrl:"dist/views/error/error404.view.html"}).when("/500",{templateUrl:"dist/views/error/error500.view.html"}).when("/measurementgoal",{templateUrl:"dist/views/measurementgoal/measurementgoal.view.html"}).when("/metricatordashboard",{templateUrl:"dist/views/home/metricatordashboard/metricatordashboard.view.html"}).when("/measurementgoalsearch",{templateUrl:"dist/views/measurementgoal/measurementgoalsearch.view.html"}).when("/metricator",{templateUrl:"dist/views/metricator/metricator.view.html"}).when("/measurementgoal/sendforapproval",{templateUrl:"dist/views/measurementgoal/measurementgoal.sendforapproval.view.html"}).otherwise({redirectTo:"/404"})}angular.module("metricapp").config(e),e.$inject=["$routeProvider","$locationProvider"]}(),function(){"use strict";function e(e,t){return{response:function(e){return e},responseError:function(o){return 401===o.status?(console.log("Error401Interceptor.responseError"),t.path("/401"),e.reject(o)):e.reject(o)}}}angular.module("metricapp").factory("Error401Interceptor",e),e.$inject=["$q","$location"]}(),function(){"use strict";function e(e,t){return{response:function(e){return e},responseError:function(o){return 404===o.status?null!==o.measurementGoals||null!==o.metrics?o:(console.log("Error404Interceptor.responseError"),t.path("/404"),e.reject(o)):e.reject(o)}}}angular.module("metricapp").factory("Error404Interceptor",e),e.$inject=["$q","$location"]}(),function(){"use strict";function e(e,t){return{response:function(e){return e},responseError:function(o){return 500===o.status?(console.log("Error500Interceptor.responseError"),t.path("/500"),e.reject(o)):e.reject(o)}}}angular.module("metricapp").factory("Error500Interceptor",e),e.$inject=["$q","$location"]}(),function(){"use strict";function e(e,t,o,r){var a=this;a.ROLES=e,a.GENDERS=t,a.USERS=o,a.PROFILES=r}angular.module("metricapp").service("DbMockService",e),e.$inject=["ROLES","GENDERS","DB_USERS","DB_PROFILES"]}(),function(){"use strict";function e(e,t,o){var r=this;r.DASHBOARDS={EXPERT:"/dashboardExpert",METRICATOR:"/dashboardMetricator",QUESTIONER:"/dashboardQuestioner"},r.ACTIONS={EXPERT:e,METRICATOR:t,QUESTIONER:o}}angular.module("metricapp").service("ActionService",e),e.$inject=["EXPERT_ACTIONS","METRICATOR_ACTIONS","QUESTIONER_ACTIONS"]}(),function(){"use strict";function e(e,t,o,r,a,n){function s(t){return console.log("LOGIN user WITH username="+t.username+" & password="+t.password),e.post(a.URL+"/api/login",t).then(function(e){var t=e.data;return console.log("SUCCESS LOGIN user WITH username="+t.username+" & password="+t.password+" & role="+t.role),t},function(e){return console.log("FAILURE LOGIN user WITH username="+t.username+" & password="+t.password),null})}function i(){return console.log("LOGOUT user"),e.post(a.URL+"/api/logout").then(function(e){var t=e.data;return console.log("SUCCESS LOGOUT user WITH username="+t),t},function(e){var t=e.data;console.log("FAILURE LOGOUT user WITH username="+t);var o="Cannot logout "+t;return o})}function l(){console.log("GET-USER cookie");var e=o.getObject("globals").user;return console.log("GET-COOKIE globals.user WITH username="+e.username+" & role="+e.role+" & authdata="+e.authdata),e}function c(r){console.log("SET-USER cookie WITH username="+r.username+" & password="+r.password+" & role="+r.role);var a=r.username+":"+r.password+":"+r.role;t.globals={user:{username:r.username,role:r.role,authdata:a}},o.putObject("globals",t.globals),console.log("PUT-COOKIE globals.user WITH username="+t.globals.user.username+" & role="+t.globals.user.role+" & authdata="+t.globals.user.authdata),e.defaults.headers.common.Authorization="Basic "+a,console.log("SET-HEADER common WITH Authorization="+e.defaults.headers.common.Authorization)}function u(){console.log("CLEAR-USER cookie"),t.globals={},o.remove("globals"),console.log("REMOVE-COOKIE globals"),e.defaults.headers.common.Authorization="Basic",console.log("SET-HEADER common WITH Authorization="+e.defaults.headers.common.Authorization)}var m=this;m.ROLES=n,m.login=s,m.logout=i,m.getUser=l,m.setUser=c,m.clearUser=u}angular.module("metricapp").service("AuthService",e),e.$inject=["$http","$rootScope","$cookies","UserService","REST_SERVICE","ROLES"]}(),function(){"use strict";function e(){function e(e){return e}function t(e){return e}var o=this;o.encode=e,o.decode=t}angular.module("metricapp").service("CryptoService",e)}(),function(){"use strict";function e(e){function t(t){e.create("success",t,0,{"class":"custom-class",id:"custom-id"},!0)}function o(t){e.create("info",t,0,{"class":"custom-class",id:"custom-id"},!0)}function r(t){e.create("warning",t,0,{"class":"custom-class",id:"custom-id"},!0)}function a(t){e.create("danger",t,0,{"class":"custom-class",id:"custom-id"},!0)}var n=this;n.success=t,n.info=o,n.warning=r,n.danger=a}angular.module("metricapp").service("FlashService",e),e.$inject=["Flash"]}(),function(){"use strict";function e(e,t,o,r,a){function n(t,o){return console.log("SUBMIT measurementGoal WITH name= "+t.name+" & object="+t.object+" & purpose="+t.purpose+" & viewPoint="+t.viewPoint+" & focus="+t.focus),console.log("POST MEASUREMENT GOAL"),console.log(JSON.stringify(t)),e.put("http://localhost:8080/metricapp-server-gitlab/measurementgoal/",t).then(function(e){console.log("SUCCESS GET measurementGoal");var t=e.data;return t},function(e){var t=e.data;return console.log("FAILURE GET measurementGoal"),t})}function s(t){return console.log("GET Measurement Goals with userid="+a.getUser().username+"&state="+t),e.get("http://localhost:8080/metricapp-server-gitlab/measurementgoal/count/?userid="+a.getUser().username+"&state="+t).then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET MEASUREMENT GOALS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET MEASUREMENT GOALS"),console.log(t),t})}function i(t){return console.log("GET Measurement Goals with userid="+a.getUser().username+"&state="+t),e.get("http://localhost:8080/metricapp-server-gitlab/measurementgoal?userid="+a.getUser().username+"&state="+t).then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET MEASUREMENT GOALS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET MEASUREMENT GOALS"),console.log(t),t})}function l(){return e.get("http://localhost:8080/metricapp-server-gitlab/external/contextfactor/all").then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET EXTERNAL CONTEXT FACTORS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET EXTERNAL CONTEXT FACTORS"),console.log(t),t})}function c(){return e.get("http://localhost:8080/metricapp-server-gitlab/external/assumption/all").then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET EXTERNAL ASSUMPTIONS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET EXTERNAL ASSUMPTIONS"),console.log(t),t})}function u(t){return e.get("http://localhost:8080/metricapp-server-gitlab/external/measurementgoal?id="+t).then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET MEASUREMENT GOALS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET MEASUREMENT GOALS"),console.log(t),t})}function m(t){return e.get("http://qips.sweng.uniroma2.it/metricapp-server/external/organizationalgoal?id=1").then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET ORGANIZATIONAL GOAL"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET ORGANIZATIONAL GOAL"),console.log(t),t})}function g(t,o){return e.get("http://localhost:8080/metricapp-server-gitlab/measurementgoal?"+o+"="+t).then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET MEASUREMENT GOALS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET MEASUREMENT GOALS"),console.log(t),t})}function p(e){f.measurementGoalToUpdate=e}function d(){return f.measurementGoalToUpdate}var f=this;f.measurementGoalToUpdate={},f.submitMeasurementGoal=n,f.getMeasurementGoals=i,f.getMeasurementGoalsBy=g,f.toUpdateMeasurementGoal=p,f.getUpdateMeasurementGoal=d,f.getOrganizationalGoalById=m,f.getMeasurementGoalExternals=u,f.getExternalContextFactors=l,f.getExternalAssumptions=c,f.countMeasurementGoalsByState=s}angular.module("metricapp").service("MeasurementGoalService",e),e.$inject=["$http","$rootScope","$cookies","$window","AuthService"]}(),function(){"use strict";function e(e,t,o){function r(){return e.get("http://localhost:8080/metricapp-server-gitlab/metric?userid=metricator").then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET METRICS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET METRICS"),console.log(t),t})}function a(t){return console.log("GET Metrics with userid="+o.getUser().username+"&state="+t),e.get("http://localhost:8080/metricapp-server-gitlab/metric/count?userid="+o.getUser().username+"&state="+t).then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET MEASUREMENT GOALS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET MEASUREMENT GOALS"),console.log(t),t})}function n(t){return e.get("http://localhost:8080/metricapp-server-gitlab/metric?id="+t).then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET METRICS"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET METRICS"),console.log(t),t})}function s(){return e.get("http://localhost:8080/metricapp-server-gitlab/metric?state=Approved").then(function(e){var t=angular.fromJson(e.data);return console.log("SUCCESS GET METRICS BY APPROVED VERSION"),console.log(t),t},function(e){var t=angular.fromJson(e.data);return console.log("FAILURE GET METRICS"),console.log(t),t})}var i=this;i.getMetrics=r,i.getApprovedMetrics=s,i.getMetricsById=n,i.countMetricsByState=a}angular.module("metricapp").service("MetricService",e),e.$inject=["$http","$window","AuthService"]}(),function(){"use strict";function e(e){function t(e,t,o){}var o=this;o.foo=t}angular.module("metricapp").service("ProfileService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e,t,o,r,a,n){function s(t,o){console.log("SIGN-UP user WITH username="+t.username+" & password="+t.password+" & role="+t.role+" & firstname="+o.firstname+" & lastname="+o.lastname+" & gender="+o.gender+" & birthday="+o.birthday+" & email="+o.email+" & picture="+o.picture);var r={user:t,profile:o};return e.post(a.URL+"/api/signup",r).then(function(e){var o=e.data;return console.log("SUCCESS SIGN-UP user WITH username="+t.username+" & password="+t.password+" & role="+t.role),{success:!0,message:o}},function(e){var t=e.data;return console.log("FAILURE SIGN-UP user WITH username="+credentials.username+" & password="+credential.username),{success:!1,message:t}})}var i=this;i.ROLES=n,i.signup=s}angular.module("metricapp").service("SignupService",e),e.$inject=["$http","$rootScope","$cookies","UserService","REST_SERVICE","ROLES"]}(),function(){"use strict";function e(e,t){function o(){return e.get(t+"/api/users").then(function(e){return e.data},function(e){return{success:!1,message:e}})}function r(o){var r={filter:"username",value:o};return e.get(t+"/api/users",r).then(function(e){return e.data},function(e){return{success:!1,message:e}})}function a(o){return e.post(t+"/api/users/create",o).then(function(e){return e.data},function(e){return{success:!1,message:e}})}function n(o){return e.post(t+"/api/users/remove",o).then(function(e){return e.data},function(e){return{success:!1,message:e}})}var s=this;s.getAll=o,s.getByUsername=r,s.create=a,s.remove=n}angular.module("metricapp").service("UserService",e),e.$inject=["$http","REST_SERVICE"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/home/expertdashboard/expertdashboard.view.html"}}angular.module("metricapp").directive("viewexpertdashboard",e)}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/measurementgoal/measurementgoal.view.html"}}angular.module("metricapp").directive("measurementgoal",e)}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/measurementgoal/measurementgoal.sendforapproval.view.html"}}angular.module("metricapp").directive("measurementgoalsendforapproval",e)}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/measurementgoal/measurementgoalsearch.view.html"}}angular.module("metricapp").directive("measurementgoalsearch",e)}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/metricator/metricator.view.html"}}angular.module("metricapp").directive("metricator",e)}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/page/page.view.html"}}angular.module("metricapp").directive("page",e)}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"dist/views/people/viewpersonalprofile/viewabout.view.html"}}function t(){return{restrict:"E",templateUrl:"dist/views/people/viewpersonalprofile/viewprojects.view.html"}}function o(){return{restrict:"E",templateUrl:"dist/views/people/viewpersonalprofile/viewstatistics.view.html"}}function r(){return{restrict:"E",templateUrl:"dist/views/people/viewpersonalprofile/vieweditprofile.view.html"}}function a(){return{restrict:"E",templateUrl:"dist/views/people/viewpersonalprofile/vieweditcredentials.view.html"}}angular.module("metricapp").directive("viewabout",e),angular.module("metricapp").directive("viewprojects",t),angular.module("metricapp").directive("viewstatistics",o),angular.module("metricapp").directive("vieweditprofile",r),angular.module("metricapp").directive("vieweditcredentials",a)}(),function(){"use strict";function e(){return{restrict:"A",require:"ngModel",link:function(e,t,o,r){r.$validators.match=function(e,t){return o.mMatch===e}}}}angular.module("metricapp").directive("mMatch",e)}(),function(){"use strict";function e(e,t){return{restrict:"A",require:"ngModel",link:function(o,r,a,n){var s=a.mUnique;n.$asyncValidators.unique=function(o,r){var a=r;console.log("m-unique WITH value="+a);var n=t.defer();return e.post(s,a).then(function(e){e.data.exist?n.reject():n.resolve()}),n.promise}}}}angular.module("metricapp").directive("mUnique",e),e.$inject=["$http","$q"]}(),function(){"use strict";function e(){return{restrict:"E",scope:!1,controller:"SidebarController as vm",templateUrl:"dist/views/navigation/sidebar/sidebar.view.html"}}angular.module("metricapp").directive("sidebar",e)}(),function(){"use strict";function e(){return{restrict:"E",scope:!1,controller:"TopbarController as vm",templateUrl:"dist/views/navigation/topbar/topbar.view.html"}}angular.module("metricapp").directive("topbar",e)}(),function(){"use strict";function e(e,t,o,r){function a(){n.loading=!0;var a={username:n.username,password:n.password};o.login(a).then(function(a){a?(o.setUser(a),e.$broadcast(r.LOGIN_SUCCESS),t.path("/home")):(alert("Invalid username or password"),e.$broadcast(r.LOGIN_FAILURE))}),n.loading=!1}var n=this;n.loading=!1,n.login=a}angular.module("metricapp").controller("LoginController",e),e.$inject=["$rootScope","$location","AuthService","AUTH_EVENTS"]}(),function(){"use strict";function e(e,t,o,r){function a(){n.loading=!0,o.logout().then(function(a){o.clearUser(),e.$broadcast(r.LOGOUT_SUCCESS),n.loading=!1,t.path("/")},function(t){alert(t),e.$broadcast(r.LOGIN_FAILURE),n.loading=!1})}var n=this;n.loading=!1,n.logout=a}angular.module("metricapp").controller("LogoutController",e),e.$inject=["$rootScope","$location","AuthService","AUTH_EVENTS"]}(),function(){"use strict";function e(e,t,o,r,a,n){function s(){var e={username:c.username,password:c.password,role:c.role},a={firstname:c.firstname,lastname:c.lastname,gender:c.gender,birthday:c.birthday,email:c.email,picture:c.picture};o.signup(e,a).then(function(e){e.success?(r.success(e.message),t.path("/")):r.success(e.message)})}function i(){t.path("/")}function l(){c.loading=!1}var c=this;c.ROLES=a,c.GENDERS=n,c.signup=s,c.cancelSignup=i,l()}angular.module("metricapp").controller("SignupController",e),e.$inject=["$scope","$location","SignupService","FlashService","ROLES","GENDERS"]}(),function(){"use strict";function e(e,t){function o(e,t,o){}var r=this;r.foo=o}angular.module("metricapp").controller("CommentController",e),e.$inject=["$scope","$location"]}(),function(){"use strict";function e(e,t){function o(){t.path("/home")}function r(){e.history.back()}var a=this;a.goHome=o,a.goBack=r}angular.module("metricapp").controller("Error401Controller",e),e.$inject=["$window","$location"]}(),function(){"use strict";function e(e,t){function o(){t.path("/home")}function r(){e.history.back()}var a=this;a.goHome=o,a.goBack=r}angular.module("metricapp").controller("Error404Controller",e),e.$inject=["$window","$location"]}(),function(){"use strict";function e(e,t){function o(){t.path("/home")}function r(){e.history.back()}var a=this;a.goHome=o,a.goBack=r}angular.module("metricapp").controller("Error500Controller",e),e.$inject=["$window","$location"]}(),function(){"use strict";function e(e,t,o,r,a,n){function s(e){return a.ACTIONS[e]}function i(){}var l=this;l.getActionsForRole=s,l.active_questioners=10,l.active_metricators=15,l.active_experts=1,l.inactive_questioners=3,l.inactive_metricators=2,l.inactive_experts=0,l.active_tasks=10,l.active_teams=2,l.total_active_users=l.active_questioners+l.active_metricators+l.active_experts,l.total_inactive_users=l.inactive_experts+l.inactive_metricators+l.inactive_questioners,l.total_users=l.total_inactive_users+l.total_active_users,l.active_users_chart_data=[{label:"Metricators",value:l.active_questioners},{label:"Questioners",value:l.active_metricators},{label:"Experts",value:l.active_experts}],l.trend_active_users=[{y:"Q2/15",questioners:19,metricators:29},{y:"Q3/15",questioners:30,metricators:35},{y:"Q1/16",questioners:55,metricators:45},{y:"Q2/16",questioners:78,metricators:80}],l.teams_productivity_trend=[{y:"01/11",questions:10,metrics:12},{y:"02/16",questions:8,metrics:3},{y:"03/16",questions:9,metrics:11},{y:"04/16",questions:12,metrics:12},{y:"05/16",questions:14,metrics:13},{y:"06/16",questions:11,metrics:9},{y:"07/16",questions:5,metrics:6}],l.projects=[{grid_name:"ISSR Project",status:"active",progress:30},{grid_name:"ISSR Project2",status:"active",progress:70}],l.date=new Date,i()}angular.module("metricapp").controller("HomeController",e),e.$inject=["$rootScope","$scope","$location","AuthService","ActionService","$filter"]}(),function(){"use strict";function e(e,t,o,r,a,n,s){function i(e){var t=void 0!==O.object?O.object:O.measurementGoalDialog.object,r=void 0!==O.purpose?O.purpose:O.measurementGoalDialog.purpose,a=void 0!==O.viewPoint?O.viewPoint:O.measurementGoalDialog.viewPoint,n=void 0!==O.qualityFocus?O.qualityFocus:O.measurementGoalDialog.qualityFocus,s=void 0!==O.functionJavascript?O.functionJavascript:O.measurementGoalDialog.interpretationModel.functionJavascript,i=void 0!==O.queryNoSQL?O.queryNoSQL:O.measurementGoalDialog.interpretationModel.queryNoSQL,l=void 0!==O.sendMessage?O.sendMessage:O.measurementGoalDialog.metadata.releaseNote,c=null!=e?e:O.measurementGoalDialog.metadata.state,u={userid:O.measurementGoalDialog.userid,name:O.name,object:t,viewPoint:a,qualityFocus:n,purpose:r,OrganizationalGoalId:O.measurementGoalDialog.OrganizationalGoalId,metrics:O.measurementGoalDialog.metrics,questions:O.measurementGoalDialog.questions,metricatorId:O.measurementGoalDialog.metricatorId,questionersId:O.measurementGoalDialog.questionersId,contextFactors:O.measurementGoalDialog.contextFactors,assumptions:O.measurementGoalDialog.assumptions,interpretationModel:{functionJavascript:s,queryNoSQL:i},metadata:{id:O.measurementGoalDialog.metadata.id,version:O.measurementGoalDialog.metadata.version,tags:O.measurementGoalDialog.metadata.tags,creatorId:O.measurementGoalDialog.metadata.creatorId,state:c,releaseNote:l,entityType:O.measurementGoalDialog.metadata.entityType,versionBus:O.measurementGoalDialog.metadata.versionBus,creationDate:O.measurementGoalDialog.metadata.creationDate,lastVersionDate:O.measurementGoalDialog.metadata.lastVersionDate}};o.submitMeasurementGoal(u,e).then(function(e){O.measurementGoalDialog=e.measurementGoals[0],$("#modal_large_measurementgoal").modal("show")},function(e){alert(e)})}function l(){i("Pending")}function c(){r.getMetricsByMeasurementGoalId(O.measurementGoalDialog.metadata.id).then(function(e){console.log("SUCCESS GET METRICS BY MEASUREMENT GOAL"),console.log(e.metrics),O.metricsDialog=e.metrics},function(e){alert("Error retriving Metrics")})}function u(){r.getApprovedMetrics().then(function(e){console.log("SUCCESS GET APPROVED METRICS"),console.log(e.metricsDTO),O.externalMetricDialog=e.metricsDTO,$("#modal_large_external_metric").modal("show")},function(e){alert("Error retriving Metrics")})}function m(){o.getExternalContextFactors().then(function(e){console.log("SUCCESS GET EXTERNAL CONTEXT FACTORS"),console.log(e),O.externalContextFactorDialog=e,$("#modal_large_external_contextfactor").modal("show")},function(e){alert("Error retriving Context Factors")})}function g(){o.getExternalAssumptions().then(function(e){console.log("SUCCESS GET EXTERNAL ASSUMPTIONS"),console.log(e),O.externalAssumptionDialog=e,$("#modal_large_external_assumption").modal("show")},function(e){alert("Error retriving Assumptions")})}function p(e){o.getOrganizationalGoalById(e).then(function(e){console.log("getOrganizationalGoalDialog"),console.log(e),O.organizationalGoalDialog=e},function(e){alert("Error retriving Measurement Goals by state")})}function d(){t.path("/measurementgoal")}function f(e){O.measurementGoalDialog=O.measurementGoals[e],null!==O.measurementGoalDialog&&E(O.measurementGoalDialog.organizatoinalGoalId)}function E(e){null!==e&&(p(e),console.log(O.organizationalGoalDialog))}function h(){null!==O.measurementGoalDialog&&E("1")}function v(){o.toUpdateMeasurementGoal(O.measurementGoalDialog),t.path("/measurementgoal"),console.log(t.path("/measurementgoal"))}function S(){O.measurementGoalDialog.metadata.tags.push(O.newTag)}function T(e){O.measurementGoalDialog.metadata.tags.splice(e,1)}function G(e){for(var t=0;t<O.metrics.length;t++)if(O.externalMetricDialog[e].metadata.id==O.metrics[t].metadata.id)return a.alert("You cannot add a metric twice!"),!0;var o={objIdLocalToPhase:"",typeObj:"Metric",instance:O.externalMetricDialog[e].metadata.id,busVersion:"",tags:[]};return O.measurementGoalDialog.metrics.push(o),O.metrics.push(O.externalMetricDialog[e]),a.alert("Item added"),console.log(O.measurementGoalDialog),!1}function w(e,t){var o=[],r=[];switch(e){case"Metric":o=O.metrics,r=O.externalMetricDialog;break;case"Question":o=O.questions,r=O.externalQuestionDialog;break;case"ContextFactor":o=O.contextFactors,r=O.externalContextFactorDialog;break;case"Assumption":o=O.assumptions,r=O.externalAssumptionDialog}if("Metric"==e||"Question"==e){console.log("METRIC OR QUESTION UPDATE");for(var n=0;n<o.length;n++)if(r[t].metadata.id==o[n].metadata.id)return a.alert("You cannot add an item twice!"),!0}else{console.log("CONTEXTFACTOR OR ASSUMPTION UPDATE"),console.log(r[t]);for(var n=0;n<o.length;n++)if(r[t].id==o[n].id)return a.alert("You cannot add an item twice!"),!0}var s={objIdLocalToPhase:"",typeObj:e,instance:r[t].metadata.id,busVersion:"",tags:[]};switch(e){case"Metric":O.measurementGoalDialog.metrics.push(s),O.metrics.push(r[t]);break;case"Question":O.measurementGoalDialog.questions.push(s),O.questions.push(r[t]);break;case"ContextFactor":O.measurementGoalDialog.contextFactors.push(s),O.contextFactors.push(r[t]);break;case"Assumption":O.measurementGoalDialog.assumptions.push(s),O.assumptions.push(r[t])}return a.alert("Item added"),console.log(O.measurementGoalDialog),!1}function U(e){O.measurementGoalDialog.metrics.splice(e,1),O.metrics.splice(e,1),a.alert("Item removed"),console.log(O.measurementGoalDialog)}function M(e,t){switch(e){case"Metric":O.measurementGoalDialog.metrics.splice(t,1),O.metrics.splice(t,1);break;case"Question":O.measurementGoalDialog.questions.splice(t,1),O.questions.splice(t,1);break;case"ContextFactor":O.measurementGoalDialog.contextFactors.splice(t,1),O.contextFactors.splice(t,1);break;case"Assumption":O.measurementGoalDialog.assumptions.splice(t,1),O.assumptions.splice(t,1)}a.alert("Item removed"),console.log("MEASUREMENT GOAL AFTER REMOVE"),console.log(O.measurementGoalDialog)}function A(){return console.log(O.measurementGoalDialog.metricatorId),console.log(n.getUser().username),console.log(O.measurementGoalDialog.metricatorId==n.getUser().username),O.measurementGoalDialog.metricatorId==n.getUser().username&&"Pending"==!O.measurementGoalDialog.metadata.state}function I(){return O.measurementGoalDialog.metricatorId==n.getUser().username&&"OnUpdateQuestionerEndpoint"==O.measurementGoalDialog.metadata.state}function R(){O.loading=!1}var O=this;$("body").removeClass("modal-open"),O.measurementGoals=[],O.measurementGoalDialog=o.getUpdateMeasurementGoal().measurementGoal,O.metrics=o.getUpdateMeasurementGoal().metrics,O.contextFactors=o.getUpdateMeasurementGoal().contextFactors,O.assumptions=o.getUpdateMeasurementGoal().assumptions,O.organizationalGoal=o.getUpdateMeasurementGoal().organizationalGoal,O.instanceProject=o.getUpdateMeasurementGoal().instanceProject,O.functionJavascript=O.measurementGoalDialog.interpretationModel.functionJavascript,O.externalMetricDialog=[],O.externalQuestionDialog=[],O.externalContextFactorDialog=[],O.externalAssumptionDialog=[],O.submitMeasurementGoal=i,O.cancelSubmit=d,O.getOrganizationalGoalById=p,O.goToUpdateMeasurementGoal=v,O.setMeasurementGoalDialog=f,O.setOrganizationalGoalDialog=E,O.initOrganizationalGoalDialog=h,O.addTagToMeasurementGoal=S,O.removeTagFromMeasurementGoal=T,O.getMetricsByMeasurementGoal=c,O.getApprovedMetrics=u,O.addMetricToMeasurementGoal=G,O.removeMetricFromMeasurementGoal=U,O.addSomethingToMeasurementGoal=w,O.removeSomethingFromMeasurementGoal=M,O.isModifiable=A,O.isSubmittable=I,O.getExternalContextFactors=m,O.getExternalAssumptions=g,O.sendForApproval=l,R()}angular.module("metricapp").controller("MeasurementGoalController",e),e.$inject=["$scope","$location","MeasurementGoalService","MetricService","$window","AuthService","STATES"]}(),function(){"use strict";function e(e,o,r,a,n){function s(){a.getMeasurementGoals().then(function(e){console.log(e.measurementGoals),g.measurementGoals=e.measurementGoals},function(e){alert("Error retriving Measurement Goals")})}function i(e,t){null!=e&&null!=t?a.getMeasurementGoalsBy(e,t).then(function(e){console.log(e.measurementGoals),g.measurementGoals=e.measurementGoals,0===g.measurementGoals.length&&n.alert(e.error);
},function(e){alert("Error retriving Measurement Goals")}):n.alert("You must enter keyword and field")}function l(){r.getMetrics().then(function(e){console.log(e.metricsDTO),g.results.metrics=e.metricsDTO},function(e){alert("Error retriving Metrics")})}function c(e){a.getMeasurementGoalExternals(e).then(function(e){g.metrics=e.metrics,g.contextFactors=e.contextFactors,g.assumptions=e.assumptions,g.organizationalGoal=e.organizationalGoal,g.instanceProject=e.instanceProject,$("#modal_large").modal("show")},function(e){alert("Error retriving Metrics")})}function u(e){g.measurementGoalDialog=g.measurementGoals[e],c(g.measurementGoals[e].metadata.id)}function m(){var e={measurementGoal:g.measurementGoalDialog,metrics:g.metrics,contextFactors:g.contextFactors,assumptions:g.assumptions,organizationalGoal:g.organizationalGoal,instanceProject:g.instanceProject};a.toUpdateMeasurementGoal(e),console.log("Going to Update Measurement Goal"),o.path("/measurementgoal"),console.log(o.path("/measurementgoal"))}var g=this;g.measurementGoals=[],g.metrics=[],g.contextFactors=[],g.assumptions=[],g.organizationalGoal={},g.instanceProject={},g.measurementGoalDialog={},g.modal="",g.getMeasurementGoals=s,g.getMetrics=l,g.goToUpdateMeasurementGoal=m,g.getMeasurementGoalExternals=c,g.setMeasurementGoalDialog=u,g.getMeasurementGoalsBy=i,t()}function t(){}angular.module("metricapp").controller("MeasurementGoalSearchController",e),e.$inject=["$scope","$location","MetricService","MeasurementGoalService","$window"]}(),function(){"use strict";function e(e,t,o){function r(){return s.messages.length}function a(){for(var e=0,t=0;t<s.messages.length;t++){var r=s.messages[t];r.state===o.UNREAD&&e++}return e}function n(){s.messages=[{author:"giacomo.marciani",content:"Lorem ipsum dolor sit amet.",state:o.UNREAD},{author:"michele.porretta",content:"Lorem ipsum dolor sit amet.",state:o.UNREAD},{author:"marco.piu",content:"Lorem ipsum dolor sit amet.",state:o.READ}]}var s=this;n(),s.getNumberOfMessages=r,s.getNumberOfUnreadMessages=a}angular.module("metricapp").controller("MessageController",e),e.$inject=["$scope","$location","MESSAGE_STATE"]}(),function(){"use strict";function e(e,o,r,a,n,s,i){function l(e){a.getMeasurementGoals(h.states[e]).then(function(t){console.log(t.measurementGoals),h.measurementGoals[e]=t.measurementGoals},function(e){alert("Error retriving Measurement Goals")})}function c(){for(var e=0;e<h.states.length;e++)l(e)}function u(){r.getMetrics().then(function(e){console.log(e.metricsDTO),h.results.metrics=e.metricsDTO},function(e){alert("Error retriving Metrics")})}function m(e){a.getMeasurementGoalExternals(e).then(function(e){h.metrics=e.metrics,h.contextFactors=e.contextFactors,h.assumptions=e.assumptions,h.organizationalGoal=e.organizationalGoal,h.instanceProject=e.instanceProject,$("#modal_large").modal("show")},function(e){alert("Error retriving Externals")})}function g(e,t){h.measurementGoalDialog=h.measurementGoals[e][t],m(h.measurementGoals[e][t].metadata.id)}function p(){var e={measurementGoal:h.measurementGoalDialog,metrics:h.metrics,contextFactors:h.contextFactors,assumptions:h.assumptions,organizationalGoal:h.organizationalGoal,instanceProject:h.instanceProject};a.toUpdateMeasurementGoal(e),console.log("Going to Update Measurement Goal"),o.path("/measurementgoal"),console.log(o.path("/measurementgoal"))}function d(){return console.log(h.measurementGoalDialog.metricatorId),console.log(i.getUser().username),console.log(h.measurementGoalDialog.metricatorId==i.getUser().username),h.measurementGoalDialog.metricatorId==i.getUser().username}function f(){return h.measurementGoalDialog.metricatorId==i.getUser().username&&"OnUpdateQuestionerEndpoint"==h.measurementGoalDialog.metadata.state}function E(){var e={measurementGoal:h.measurementGoalDialog,metrics:h.metrics,contextFactors:h.contextFactors,assumptions:h.assumptions,organizationalGoal:h.organizationalGoal,instanceProject:h.instanceProject};a.toUpdateMeasurementGoal(e),o.path("/measurementgoal/sendforapproval")}var h=this;h.getMeasurementGoals=c,h.getMeasurementGoalsByState=l,h.getMetrics=u,h.goToUpdateMeasurementGoal=p,h.getMeasurementGoalExternals=m,h.states=[s.ONUPDATEQUESTIONERENDPOINT,s.CREATED],h.measurementGoals=[void 0,void 0],h.metrics=[],h.contextFactors=[],h.assumptions=[],h.organizationalGoal={},h.instanceProject={},h.measurementGoalDialog={},h.modal="",h.setMeasurementGoalDialog=g,h.isModifiable=d,h.isSubmittable=f,h.sendForApproval=E,h.getMeasurementGoals(),t()}function t(){}angular.module("metricapp").controller("MetricatorController",e),e.$inject=["$scope","$location","MetricService","MeasurementGoalService","$window","STATES","AuthService"]}(),function(){"use strict";function e(e,t){function o(){return 10}function r(){}var a=this;a.getNumberOfUnreadNotifications=o,r()}angular.module("metricapp").controller("NotificationController",e),e.$inject=["$scope","$location"]}(),function(){"use strict";function e(e,t,o){}angular.module("metricapp").controller("PageController",e),e.$inject=["$scope","$location","AuthService"]}(),function(){"use strict";function e(e,t,o,r,a){var n=this;n.show=1,n.GENDERS=a,n.picture="assets/images/users/user2.jpg",n.userFullName="Maria Bianchi",n.workRole="Metricator",n.firstname="Maria",n.lastname="Bianchi",n.username="maria_bianchi",n.password="password",n.password_r="password",n.email="mariabianchi@gmail.com",n.phone="+39 38376 6284",n.role="Metricator",n.birthday="01/01/1990",n.gender="Female",n.url="www.mariabianchi.it",n.biography="Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."}angular.module("metricapp").controller("ProfileController",e),e.$inject=["$scope","$location","ProfileService","FlashService","GENDERS"]}(),function(){"use strict";function e(e,t,o){}angular.module("metricapp").controller("SettingsController",e),e.$inject=["$scope","$location","AuthService"]}(),function(){"use strict";function e(e,t,o){}angular.module("metricapp").controller("TeamController",e),e.$inject=["$scope","$location","AuthService"]}(),function(){"use strict";function e(e,t,o,r,a){var n=this,s=d3.scale.category20();n.options={chart:{type:"forceDirectedGraph",height:300,radius:10,linkStrength:.1,width:function(){return nv.utils.windowSize().width}(),margin:{top:10,right:10,bottom:10,left:10},color:function(e){return s(e.group)},nodeExtras:function(e){e&&e.append("text").attr("dx",15).attr("dy",".60em").text(function(e){return e.name}).style("font-size","15px")}}},n.data={nodes:[{name:"Adaadasdasdsadsads",group:1},{name:"B",group:2,civico:19},{name:"C",group:3},{name:"D",group:4},{name:"E",group:5},{name:"F",group:6},{name:"G",group:7}],links:[{source:1,target:0,value:1},{source:1,target:0,value:2},{source:1,target:0,value:3},{source:3,target:0,value:4},{source:4,target:0,value:5},{source:5,target:0,value:6}]}}angular.module("metricapp").controller("DraftController",e),e.$inject=["$scope","$location","ProfileService","FlashService","GENDERS"]}(),function(){"use strict";function e(e,t){}angular.module("metricapp").controller("GoalController",e),e.$inject=["$scope","$location"]}(),function(){"use strict";function e(e,t){}angular.module("metricapp").controller("GridController",e),e.$inject=["$scope","$location"]}(),function(){"use strict";function e(e,t){}angular.module("metricapp").controller("MetricController",e),e.$inject=["$scope","$location"]}(),function(){"use strict";function e(e,t){}angular.module("metricapp").controller("QuestionController",e),e.$inject=["$scope","$location"]}(),function(){"use strict";function e(e,t,o,r,a,n,s){function i(){console.log("Retrieving some informations about Measurement Goals"),u.measurementGoalStates.forEach(function(e){r.countMeasurementGoalsByState(e).then(function(t){console.log(t.measurementGoals),u.measurementGoals[e]=t.count,console.log("vm.measurementGoals["+e+"] = "+t.count)},function(e){alert("Error retriving Measurement Goals")})},u),console.log(u.measurementGoals)}function l(){console.log("Retrieving some informations about Metrics"),u.metricStates.forEach(function(e){o.countMetricsByState(e).then(function(t){console.log(t.metricsDTO),u.metrics[e]=t.count,console.log("vm.metrics["+e+"] = "+t.count)},function(e){alert("Error retriving Metrics")})},u)}function c(){}var u=this;u.date=new Date,u.measurementGoalStates=[n.APPROVED,n.ONUPDATEQUESTIONERENDPOINT,n.PENDING],u.metricStates=[s.APPROVED,s.ONUPDATE,s.PENDING],u.measurementGoals={},u.metrics={},u.getMeasurementGoals=i,u.getMetrics=l,u.getMeasurementGoals(),u.getMetrics(),c()}angular.module("metricapp").controller("MetricatorDashboardController",e),e.$inject=["$scope","$location","MetricService","MeasurementGoalService","$window","STATES","STATES_METRIC"]}(),function(){"use strict";function e(e,t,o){function r(e){return o.DASHBOARDS[e]}function a(e){return o.ACTIONS[e]}function n(){}var s=this;s.getDashboardForRole=r,s.getActionsForRole=a,n()}angular.module("metricapp").controller("SidebarController",e),e.$inject=["$scope","$location","ActionService"]}(),function(){"use strict";function e(e,t,o){}angular.module("metricapp").controller("TopbarController",e),e.$inject=["$scope","$location","AuthService"]}(),function(){"use strict";function e(e,t,o,r){var a=(o.ROLES,o.USERS),n=o.PROFILES;e.whenPOST(r.URL+"/api/login").respond(function(e,t,o,r,n){var s=angular.fromJson(o);console.log("/api/login WITH username="+s.username+" & password="+s.password);for(var i=0;i<a.length;i++){var l=a[i];if(l.username===s.username&&l.password===s.password){var c={username:l.username,password:l.password,role:l.role};return console.log("SUCCESS /api/login WITH username="+c.username+" & password="+c.password+" & role="+c.role),[200,c,{}]}}return console.log("FAILURE /api/login 401 WITH username="+s.username+" & password="+s.password),[401,{},{}]}),e.whenPOST(r.URL+"/api/logout").respond(function(e,t,o,r,n){var s=r.Authorization,i=s.split(" ")[1];console.log("authdata="+i);var l={username:i.split(":")[0],password:i.split(":")[1]};console.log("/api/logout WITH username="+l.username+" & password="+l.password);for(var c=0;c<a.length;c++){var u=a[c];if(u.username===l.username&&u.password===l.password)return console.log("SUCCESS /api/logout WITH username="+u.username+" & password="+u.password),[200,l.username,{}]}return console.log("FAILURE /api/logout 401 WITH username="+l.username+" & password="+l.password),[401,l.username,{}]}),e.whenPOST("http://localhost:8080/metricapp-server-gitlab/measurementgoal/").passThrough(),e.whenGET("http://localhost:8080/metricapp-server-gitlab/measurementgoal?userid=metricator").passThrough(),e.whenGET("http://qips.sweng.uniroma2.it/metricapp-server/external/organizationalgoal?id=1").passThrough(),e.whenGET("http://localhost:8080/metricapp-server-gitlab/metric?state=Approved").passThrough(),e.whenGET("http://localhost:8080/metricapp-server-gitlab/metric?userid=metricator").passThrough(),e.whenPOST(r.URL+"/api/signup").respond(function(e,t,o,r,s){var i=angular.fromJson(o),l=i.user,c=i.profile;console.log("/api/signup WITH username="+l.username+" & password="+l.password+" & role="+l.role+" & firstname="+c.firstname+" & lastname="+c.lastname+" & gender="+c.gender+" & birthday"+c.birthday+" & email="+c.email+" & picture="+c.picture),c.username=l.username,a.push(l),n.push(c),console.log("SUCCESS /api/signup WITH username="+l.username+" & password="+l.password+" & role="+l.role+" & firstname="+c.firstname+" & lastname="+c.lastname+" & gender="+c.gender+" & birthday"+c.birthday+" & email="+c.email+" & picture="+c.picture);var u="User registered";return[200,u,{}]}),e.whenPOST(r.URL+"/api/users/exist/username").respond(function(e,t,o,r,n){var s=o;console.log("/api/users/exist/username WITH username="+s);for(var i=0;i<a.length;i++){var l=a[i];if(l.username===s)return console.log("SUCCESS EXIST user WITH username="+s),[200,{exist:!0},{}]}return console.log("SUCCESS NOT EXIST user WITH username="+s),[200,{exist:!1},{}]}),e.whenPOST(r.URL+"/api/users/exist/email").respond(function(e,t,o,r,a){var s=o;console.log("/api/users/exist/email WITH email="+s);for(var i=0;i<n.length;i++){var l=n[i];if(l.email===s)return console.log("SUCCESS EXIST user WITH email="+s),[200,{exist:!0},{}]}return console.log("SUCCESS NOT EXIST user WITH email="+s),[200,{exist:!1},{}]}),e.whenGET(/^dist\//).passThrough(),e.whenGET(/.*/).passThrough(),e.whenPOST(/.*/).passThrough(),e.whenPUT(/.*/).passThrough(),e.whenDELETE(/.*/).passThrough()}angular.module("metricapp").run(e),e.$inject=["$httpBackend","$filter","DbMockService","REST_SERVICE"]}(),function(){"use strict";function e(e,t,o,r){var a=["/login","/signup","/401","/404","/500"],n="/login";e.globals=t.getObject("globals")||{},e.globals.user&&(o.defaults.headers.common.Authorization="Basic "+e.globals.user.authdata),e.$on("$locationChangeStart",function(t,o,s){var i=-1===$.inArray(r.path(),a),l=e.globals.user;i&&!l&&r.path(n)})}angular.module("metricapp").run(e),e.$inject=["$rootScope","$cookies","$http","$location"]}();